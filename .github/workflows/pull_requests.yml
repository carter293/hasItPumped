name: PR Tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run FastAPI Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hasItPumped/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Cache Poetry and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          pip install poetry==2.1.2
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests
        run: poetry run pytest -xvs --no-header

  frontend-lint:
    name: Run Frontend Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hasItPumped/frontend

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ./hasItPumped/frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: false