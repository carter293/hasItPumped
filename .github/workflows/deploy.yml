name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run FastAPI Tests
    runs-on: ubuntu-latest
    # Remove the slim container and use the standard runner
    defaults:
      run:
        working-directory: ./hasItPumped/backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Cache Poetry and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          pip install poetry==1.7.1
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests
        run: poetry run pytest -xvs --no-header

  deploy:
    name: Deploy FastAPI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./hasItPumped/backend
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}